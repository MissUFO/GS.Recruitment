@using GS.Recruitment.BusinessObjects.Implementation
@using GS.Recruitment.BusinessObjects.Enum
@model Assignment
@{
    Layout = "~/Views/Shared/_LayoutControlPanel.cshtml";
    ViewBag.Title = Model.Id == Guid.Empty ? "New Assignment" : "Assignment #"+ Model.Number;
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">@ViewBag.Title</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>
<!-- /.row -->
<div class="row">
    <div class="col-lg-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                Assignment details
            </div>

            <div class="panel-body">
                <!-- Nav tabs -->
                <ul class="nav nav-tabs">
                    <li class="active">
                        <a href="#assignment-panel" data-toggle="tab">Assignment</a>
                    </li>
                    <li>
                        <a href="#contact-panel" data-toggle="tab">Contacts</a>
                    </li>
                </ul>
                <!-- Tab panes -->
                <div class="tab-content">
                    <div class="tab-pane fade in active" id="assignment-panel">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-lg-6">
                                    @using (Html.BeginForm("AddEdit", "RecruiterAssignments", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(m => m.Id)

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.TaskId, new { @class = "col-md-2 control-label" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(m => m.TaskId, (IEnumerable<SelectListItem>)ViewBag.Tasks, "Please select the task", new { @class = "form-control", required = "required" })
                                                @Html.ValidationMessageFor(m => m.TaskId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(m => m.Title, new { @class = "form-control", required = "required" })
                                                @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
                                            <div class="col-md-10">
                                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 5 })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.StartDate, new { @class = "col-md-2 control-label", required = "required" })
                                            <div class="col-md-10">
                                                <div class="input-group date" id='ctrl-startdate'>
                                                    @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control" })
                                                    <span class="input-group-addon">
                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                    </span>
                                                </div>
                                                @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EndDate, new { @class = "col-md-2 control-label" })
                                            <div class="col-md-10">
                                                <div class="input-group date" id='ctrl-enddate'>
                                                    @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control" })
                                                    <span class="input-group-addon">
                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.UserFromId, new { @class = "col-md-2 control-label" })
                                            <div class="col-md-10">
                                                @Html.DisplayFor(m => m.UserFromLogin, new { @class = "form-control" })
                                                @Html.HiddenFor(m => m.UserFromId)
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.UserToId, new { @class = "col-md-2 control-label" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(m => m.UserToId, (IEnumerable<SelectListItem>)ViewBag.Users, "Please select user", new { @class = "form-control", required = "required" })
                                                @Html.ValidationMessageFor(m => m.UserToId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.AssignmentStatus, new { @class = "col-md-2 control-label" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(m => m.AssignmentStatus, new SelectList(Enum.GetNames(typeof(AssignmentStatus)), (int)Model.AssignmentStatus), new { @class = "form-control", required = "required" })
                                                @Html.ValidationMessageFor(m => m.AssignmentStatus, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-md-2 control-label"> </label>
                                            <div class="col-md-10">
                                                <button type="submit" class="btn btn-primary">Save</button>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="tab-pane fade" id="contact-panel">
                        <div class="panel-heading">
                            <div class="pull-right">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown">
                                        <i class="fa fa-cog fa-fw"></i> Actions
                                        <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu pull-right" role="menu">
                                        <li>
                                            <a href="@Url.Action("AssignContact","RecruiterAssignments", new { Id = Model.Id })">
                                                <i class="fa fa-file-text-o fa-fw"></i> Assign Contact
                                            </a>
                                        </li>
                                        <li>
                                            <a href="@Url.Action("AssignAllContacts","RecruiterAssignments", new { Id = Model.Id })">
                                                <i class="fa fa-copy fa-fw"></i> Assign All Contacts
                                            </a>
                                        </li>
                                        <li class="divider"></li>
                                        <li>
                                            <a href="#">
                                                <i class="fa fa-trash-o fa-fw"></i> Delete
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="panel-body">
                            <table width="100%" class="table table-striped table-bordered table-hover" id="dataTables-example">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Phone</th>
                                        <th>Company</th>
                                        <th>JobTitle</th>
                                        <th>LastContactDate</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.AssignmentContacts)
                                    {
                                        <tr class="odd gradeX">
                                            <td><a href="@(Url.Action("AddEdit", "RecruiterCandidates", new { id = item.Contact.Id }))">@item.Contact.Name</a></td>
                                            <td>@(item.Contact.Emails.Count > 0 ? item.Contact.Emails[0].EmailAddress : "")</td>
                                            <td>@(item.Contact.Phones.Count > 0 ? item.Contact.Phones[0].PhoneNumber : "")</td>
                                            <td>@(item.Contact.Experiences.Count > 0 ? item.Contact.Experiences[0].CompanyName : "")</td>
                                            <td>@(item.Contact.Experiences.Count > 0 ? item.Contact.Experiences[0].JobTitle : "")</td>
                                            <td>@(item.Contact.JobPreferences.Count > 0 ? item.Contact.JobPreferences[0].LastContactDate.ToString() : "")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
@section scripts
{
    <script type="text/javascript">
        $(function () {
            $('#ctrl-startdate').datetimepicker({
                //viewMode: 'years',
                format: 'DD/MM/YYYY'
            });
            $('#ctrl-enddate').datetimepicker({
                //viewMode: 'years',
                format: 'DD/MM/YYYY'
            });
        });
    </script>
}